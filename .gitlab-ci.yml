stages:
  - generate
  - deploy

.before_script_template:
  before_script:
    - npm install --global expo-cli eas-cli
    - npm ci --cache .npm --prefer-offline
    - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD

publish-to-expo:
  image: node:alpine
  extends: .before_script_template
  stage: generate
  only:
    changes:
      - "!bikepark42/*"
      - "!.gitlab-ci.yml"
      - "*"
  script:
    - npx expo publish --non-interactive

generate-apk:
  image: node:alpine
  extends: .before_script_template
  stage: generate
  only:
    changes:
      - "!bikepark42/*"
      - "!.gitlab-ci.yml"
      - "*"
  script:
    - apk add --no-cache bash
    - EAS_NO_VCS=1 npx eas-cli build -p -y android --profile preview > apk-output.txt
    - echo $( tail -n 1 apk-output.txt ) > apk.txt
  artifacts:
    paths:
      - apk.txt

deploy-to-heroku:
  stage: deploy
  script:
    - apt-get update -yq
    - apt-get install -y ruby ruby-dev rubygems-integration git curl
    - cd bikepark42
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY

set-link-variables:
  stage: deploy
  only:
    changes:
      - "!bikepark42/*"
      - "!.gitlab-ci.yml"
      - "*"
  script:
    - apt-get update
    - apt-get install curl -y
    - curl https://cli-assets.heroku.com/install.sh | sh
    - heroku config:set APK_LINK=$(cat apk.txt) --app bikepark42